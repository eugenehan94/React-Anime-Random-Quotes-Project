{"version":3,"sources":["styles/styles.js","components/Loading.js","components/Footer.js","components/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","container","height","width","imageWrapper","display","justifyContent","minHeight","marginBottom","navbar","navbarToolbar","loadingContainer","alignItems","footerContainer","backgroundColor","color","padding","textAlign","footerLink","textDecoration","Loading","classes","className","CircularProgress","size","Footer","Container","Typography","Link","style","href","target","rel","Navbar","AppBar","position","Toolbar","variant","App","React","useState","animeData","setAnimeData","imageLink","setImageLink","loading","setLoading","useEffect","axios","request","then","response","data","anime","resp","results","map","it","image_url","toString","setTimeout","catch","error","console","maxWidth","CssBaseline","align","Box","src","alt","Button","onClick","window","location","reload","disableElevation","character","gutterBottom","quote","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.77db0df1.chunk.js","sourcesContent":["import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  container: {\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n  },\r\n  imageWrapper: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    width: \"100%\",\r\n    minHeight: \"358px\",\r\n    marginBottom: \"2rem\",\r\n  },\r\n\r\n  navbar: {\r\n    marginBottom: \"2rem\",\r\n  },\r\n\r\n  navbarToolbar: {\r\n    justifyContent: \"center\",\r\n  },\r\n  loadingContainer: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    height: \"100vh\",\r\n  },\r\n  footerContainer: {\r\n    width: \"100%\",\r\n    backgroundColor: \"#3B3B3B\",\r\n    color: \"#fff\",\r\n    padding: \"1rem\",\r\n    textAlign: \"center\",\r\n  },\r\n  footerLink: {\r\n    color: \"white\",\r\n    textDecoration: \"none\",\r\n  },\r\n});\r\n\r\nexport default useStyles;\r\n","import React from \"react\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nimport useStyles from \"../styles/styles\";\r\n\r\nconst Loading = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.loadingContainer}>\r\n      <CircularProgress size=\"10rem\" />\r\n    </div>\r\n  );\r\n};\r\nexport default Loading;\r\n","import React from \"react\";\r\nimport { Typography, Container, Link } from \"@material-ui/core\";\r\n\r\nimport useStyles from \"../styles/styles\";\r\n\r\nconst Footer = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.footerContainer}>\r\n      <Container>\r\n        <Typography>\r\n          Developed by{\" \"}\r\n          <Link\r\n            style={{ color: \"white\" }}\r\n            className={classes.footerLink}\r\n            href=\"https://eugenehan.netlify.app/\"\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n          >\r\n            Eugene Han\r\n          </Link>\r\n        </Typography>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport { AppBar, Toolbar, Typography } from \"@material-ui/core\";\r\n\r\nimport useStyles from \"../styles/styles\";\r\n\r\nconst Navbar = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.navbar}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar className={classes.navbarToolbar}>\r\n          <Typography variant=\"h5\">Anime Random Quotes</Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","/*\nGet random anime quote from : https://animechan.vercel.app/api/random   \n\nAnime data base with API: https://api.jikan.moe/v3/search/anime?q=naruto \nto get an appropriate image for the quote above.\n\n*/\n\nimport React, { useEffect } from \"react\";\nimport axios from \"axios\";\n\n/*Components imports*/\nimport Loading from \"./components/Loading\";\nimport Footer from \"./components/Footer\";\nimport Navbar from \"./components/Navbar\";\nimport \"./App.css\";\n\n/*Material UI imports*/\nimport {\n  Typography,\n  CssBaseline,\n  Container,\n  Button,\n  Box,\n} from \"@material-ui/core\";\n\n/*For makeStyles*/\nimport useStyles from \"./styles/styles\";\n\n/*For axios*/\nconst baseURL = \"https://animechan.vercel.app/api/random\";\nconst imageURL = \"https://api.jikan.moe/v3/search/anime?q=\";\n\nfunction App() {\n  /*For using makeStyles */\n  const classes = useStyles();\n\n  const [animeData, setAnimeData] = React.useState(null);\n  const [imageLink, setImageLink] = React.useState(null);\n  const [loading, setLoading] = React.useState(true);\n\n  useEffect(() => {\n    axios\n      .request(baseURL)\n      .then(function (response) {\n        setAnimeData(response.data);\n\n        axios\n          .request(imageURL + `/${response.data.anime}&limit=1`)\n          .then(function (resp) {\n            const item = resp.data.results;\n            const imageLink = item.map((it) => it.image_url).toString();\n\n            setImageLink(imageLink);\n          });\n\n        setTimeout(() => {\n          setLoading(false);\n        }, 2000);\n      })\n      .catch(function (error) {\n        console.error(error);\n      });\n  }, []);\n\n  if (loading) {\n    return <Loading />;\n  }\n\n  return (\n    <div className={classes.container}>\n      <Navbar />\n      <Container maxWidth=\"lg\">\n        <CssBaseline />\n        <Typography variant=\"h3\" align=\"center\">\n          {animeData.anime}{\" \"}\n        </Typography>\n        <div className={classes.imageWrapper}>\n          <Box>\n            {imageLink === null ? (\n              <img\n                src={`${imageLink}`}\n                alt=\" API doesn't have an image for this anime\"\n              />\n            ) : (\n              <img src={`${imageLink}`} alt=\"anime\" />\n            )}\n          </Box>\n        </div>\n        <Box textAlign=\"center\">\n          <Button\n            onClick={() => window.location.reload(false)}\n            variant=\"contained\"\n            color=\"primary\"\n            disableElevation\n          >\n            New Quote\n          </Button>\n        </Box>\n        <Typography variant=\"h3\" align=\"center\">\n          {animeData.character}\n        </Typography>\n        <Typography variant=\"h6\" align=\"center\" gutterBottom>\n          \"{animeData.quote}\"\n        </Typography>\n      </Container>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}