{"version":3,"sources":["styles/styles.js","components/Loading.js","components/Footer.js","components/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","imageWrapper","display","justifyContent","width","height","marginBottom","card","cardMedia","objectFit","navbar","navbarContainer","backgroundColor","navbarToolbar","loadingContainer","alignItems","footerContainer","color","padding","textAlign","footerLink","textDecoration","Loading","classes","className","CircularProgress","size","Footer","Container","Typography","Link","style","href","target","rel","Navbar","AppBar","position","Toolbar","variant","App","React","useState","post","setPost","post2","setPost2","loading","setLoading","imageLoading","setImageLoading","useEffect","axios","request","then","response","data","anime","resp","imageLink","results","map","it","image_url","toString","catch","error","console","maxWidth","CssBaseline","align","Card","CardMedia","image","Box","Button","onClick","window","location","reload","disableElevation","character","gutterBottom","quote","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b600ebd6.chunk.js","sourcesContent":["import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  imageWrapper: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    width: \"100%\",\r\n    height: \"100vh\",\r\n    marginBottom: \"2rem\",\r\n  },\r\n  card: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n  },\r\n  cardMedia: {\r\n    height: \"700px\",\r\n    width: \"500px\",\r\n    objectFit: \"contain\",\r\n  },\r\n  navbar: {\r\n    marginBottom: \"2rem\",\r\n  },\r\n  navbarContainer: {\r\n    backgroundColor: \"#3B3B3B\",\r\n  },\r\n  navbarToolbar: {\r\n    justifyContent: \"center\",\r\n  },\r\n  loadingContainer: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    height: \"100vh\",\r\n  },\r\n  footerContainer: {\r\n    width: \"100%\",\r\n    backgroundColor: \"#3B3B3B\",\r\n    color: \"#fff\",\r\n    padding: \"1rem\",\r\n    textAlign: \"center\",\r\n  },\r\n  footerLink: {\r\n    color: \"white\",\r\n    textDecoration: \"none\",\r\n  },\r\n});\r\n\r\nexport default useStyles;\r\n","import React from \"react\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nimport useStyles from \"../styles/styles\";\r\n\r\nconst Loading = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.loadingContainer}>\r\n      <CircularProgress size=\"10rem\" />\r\n    </div>\r\n  );\r\n};\r\nexport default Loading;\r\n","import React from \"react\";\r\nimport { Typography, Container, Link } from \"@material-ui/core\";\r\n\r\nimport useStyles from \"../styles/styles\";\r\n\r\nconst Footer = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.footerContainer}>\r\n      <Container>\r\n        <Typography>\r\n          Developed by{\" \"}\r\n          <Link\r\n            style={{ color: \"white\" }}\r\n            className={classes.footerLink}\r\n            href=\"https://eugenehan.netlify.app/\"\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n          >\r\n            Eugene Han\r\n          </Link>\r\n        </Typography>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport { AppBar, Toolbar, Typography } from \"@material-ui/core\";\r\n\r\nimport useStyles from \"../styles/styles\";\r\n\r\nconst Navbar = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.navbar}>\r\n      <AppBar position=\"static\" className={classes.navbarContainer}>\r\n        <Toolbar className={classes.navbarToolbar}>\r\n          <Typography variant=\"h5\">Anime Random Quotes</Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","/*\nGet random anime quote from : https://animechan.vercel.app/api/random   \n\nAnime data base with API: https://api.jikan.moe/v3/search/anime?q=naruto \nto get an appropriate image for the quote above.\n\n*/\n\nimport React, { useEffect } from \"react\";\nimport axios from \"axios\";\n\n/*Components imports*/\nimport Loading from \"./components/Loading\";\nimport Footer from \"./components/Footer\";\nimport Navbar from \"./components/Navbar\";\nimport \"./App.css\";\n\n/*Material UI imports*/\nimport {\n  Typography,\n  CssBaseline,\n  Container,\n  Card,\n  CardMedia,\n  Button,\n  Box,\n} from \"@material-ui/core\";\n\n/*For makeStyles*/\nimport useStyles from \"./styles/styles\";\n\n/*For axios*/\nconst baseURL = \"https://animechan.vercel.app/api/random\";\nconst imageURL = \"https://api.jikan.moe/v3/search/anime?q=\";\n\nfunction App() {\n  /*For using makeStyles */\n  const classes = useStyles();\n\n  const [post, setPost] = React.useState(null);\n  const [post2, setPost2] = React.useState(null);\n  const [loading, setLoading] = React.useState(true);\n  const [imageLoading, setImageLoading] = React.useState(true);\n\n  useEffect(() => {\n    axios\n      .request(baseURL)\n      .then(function (response) {\n        setPost(response.data);\n\n        axios\n          .request(imageURL + `/${response.data.anime}&limit=1`)\n          .then(function (resp) {\n            const item = resp.data.results;\n            const imageLink = item.map((it) => it.image_url).toString();\n            setPost2(imageLink);\n          });\n        setImageLoading(false);\n        setLoading(false);\n      })\n      .catch(function (error) {\n        console.error(error);\n      });\n  }, []);\n\n  if (loading) {\n    return <Loading />;\n  }\n\n  return (\n    <div>\n      <Navbar />\n      <Container maxWidth=\"lg\">\n        <CssBaseline />\n        <Typography variant=\"h3\" align=\"center\">\n          {post.anime}{\" \"}\n        </Typography>\n        <div className={classes.imageWrapper}>\n          <Card className={classes.card}>\n            {imageLoading === true ? (\n              \"Loading...\"\n            ) : (\n              <CardMedia className={classes.cardMedia} image={`${post2}`} />\n            )}\n          </Card>\n        </div>\n        <Box textAlign=\"center\">\n          <Button\n            onClick={() => window.location.reload(false)}\n            variant=\"contained\"\n            disableElevation\n          >\n            Refresh\n          </Button>\n        </Box>\n        <Typography variant=\"h3\" align=\"center\">\n          {post.character}\n        </Typography>\n        <Typography variant=\"h6\" align=\"center\" gutterBottom>\n          \"{post.quote}\"\n        </Typography>\n      </Container>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}